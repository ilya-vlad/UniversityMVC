@model Student
@{ 
    string redStart = "<span style=\"color:red\">*</span>";
    var groups = new SelectList((IEnumerable<Group>)ViewData["Groups"], "Id", "Name");
    groups.Where(x => x.Value == ((int)ViewBag.GroupId).ToString()).FirstOrDefault().Selected = true;
}

<div class="form-group">
    @Html.LabelFor(m => m.LastName, Localizer["LastName"].Value, new { @class = "control-label" })
    @Html.Raw(redStart)
    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.FirstName, Localizer["FirstName"].Value, new { @class = "control-label" })
    @Html.Raw(redStart)
    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.GroupId, Localizer["GroupId"].Value, new { @class = "control-label" })
    @Html.Raw(redStart)
    @Html.DropDownListFor(m => m.GroupId, groups as IEnumerable<SelectListItem>, new { @class = "custom-select" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.DateOfBirth, Localizer["DateOfBirth"].Value, new { @class = "control-label" })
    @Html.Raw(redStart)
    @Html.EditorFor(m => m.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
    @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.ExamScore, Localizer["ExamScore"].Value, new { @class = "control-label" })
    @Html.Raw(redStart)    
    @Html.EditorFor(m => m.ExamScore, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(m => m.ExamScore, "", new { @class = "text-danger" })
</div>